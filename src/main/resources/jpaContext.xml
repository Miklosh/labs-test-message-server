<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jp/spring-jpa-1.4.xsd">

    <!-- We will going use annotation to configure application -->
    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="com.engagepoint.university.messaging.dao"></context:component-scan>

    <!-- Looks for Spring data jpa repositories -->
    <!--<jpa:repositories base-package="com.xilibit.edu.application.repository"></jpa:repositories>-->

    <!-- Use restfull application, annotations.
         Inject the persistence context and the EntityManagerFactory into our resource. -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"></bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="persistenceUnit"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"></property>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"></entry>
                <entry key="hibernate.hbm2ddl.auto" value="create"></entry>
                <entry key="hibernate.format_sql" value="true"></entry>
            </map>
        </property>
    </bean>

    <!-- All our JPA is wrapped in transactions now.
         We pass our EntityManagerFactory up here, into it. -->
    <!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">-->
    <!--<property name="entityManagerFactory" ref="entityManagerFactory"></property>-->
    <!--</bean>-->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>

    <!-- We will going to configure transactions using annotation @Transactional as well. -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <tx:jta-transaction-manager/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"></property>
        <property name="url" value="jdbc:hsqldb:hsql://localhost:9001/messagingserver?autoReconnect=true"></property>
        <property name="username" value="sa"></property>
        <property name="password" value=""></property>
    </bean>

</beans>